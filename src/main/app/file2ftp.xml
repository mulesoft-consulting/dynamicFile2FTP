<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd" >
    <apikit:config name="file2ftp-config" raml="file2ftp.raml" consoleEnabled="true" consolePath="console" doc:name="Router" />
    <flow name="file2ftp-main">
        <http:listener config-ref="http-lc-0.0.0.0-8081" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="file2ftp-config" doc:name="APIkit Router"/>
        <exception-strategy ref="file2ftp-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="put:/file:application/json:file2ftp-config" tracking:enable-default-events="true">
        <dw:transform-message doc:name="Set Properties">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            <dw:set-session-variable variableName="inParams"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-session-variable>
        </dw:transform-message>
        <tracking:custom-event event-name="file transfer" doc:name="Create File Transfer Business Event">
            <tracking:meta-data key="source-directory" value="#[payload.source.directory]"/>
            <tracking:meta-data key="source-fileName" value="#[payload.source.fileName]"/>
            <tracking:meta-data key="destination-ftpType" value="#[payload.destination.ftpType]"/>
            <tracking:meta-data key="destination-host" value="#[payload.destination.host]"/>
            <tracking:meta-data key="destination-path" value="#[payload.destination.path]"/>
            <tracking:meta-data key="destination-user" value="#[payload.destination.user]"/>
        </tracking:custom-event>
        <scripting:component doc:name="read file">
            <scripting:script engine="Groovy"><![CDATA[fullFileName = payload.source.directory + payload.source.fileName;
return new FileInputStream(new File(fullFileName));]]></scripting:script>
        </scripting:component>
        <choice doc:name="Choice">
            <when expression="#[sessionVars.inParams.destination.ftpType == &quot;SFTP&quot;]">
                <sftp:outbound-endpoint exchange-pattern="one-way" outputPattern="#[server.dateTime + '-' + sessionVars.inParams.source.fileName]" host="#[sessionVars.inParams.destination.host]" port="22" path="#[sessionVars.inParams.destination.path]" user="#[sessionVars.inParams.destination.user]" password="#[sessionVars.inParams.destination.password]" responseTimeout="10000" doc:name="PUT"/>
            </when>
            <otherwise>
                <ftp:outbound-endpoint host="#[sessionVars.inParams.destination.host]" port="21" path="#[sessionVars.inParams.destination.path]" user="#[sessionVars.inParams.destination.user]" password="#[sessionVars.inParams.destination.password]" passive="false" outputPattern="#[sessionVars.inParams.source.fileName]" responseTimeout="10000" doc:name="PUT"/>
            </otherwise>
        </choice>
        <set-payload value="{ &quot;message&quot; : &quot;file #[sessionVars.inParams.source.directory + sessionVars.inParams.source.fileName + ' was written to ' + sessionVars.inParams.destination.host + ' ' + sessionVars.inParams.destination.ftpType + ' server']&quot;}" doc:name="Set Response"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="file2ftpFlow">
        <sftp:inbound-endpoint host="localhost" port="22" responseTimeout="10000" doc:name="SFTP"/>
    </flow>
    <apikit:mapping-exception-strategy name="file2ftp-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
